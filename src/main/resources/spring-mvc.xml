<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                         http://www.springframework.org/schema/beans/spring-beans-4.3.xsd    
                          http://www.springframework.org/schema/context    
                          http://www.springframework.org/schema/context/spring-context-4.3.xsd    
                       http://www.springframework.org/schema/mvc    
                         http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.lqpl66.controller" />
	<!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->
	<!-- <mvc:annotation-driven /> -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- 静态文件处理 -->
	<!-- location:表示/assets/目录下（即服务器根目录）的static包下的所有文件 -->
	<!-- mapping:表示以/static开头的所有请求路径，如/static/a 或者/static/a/b -->
	<mvc:resources location="/assets/" mapping="/public/**/" />

	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<!-- <bean id="mappingJackson2HttpMessageConverter" -->
	<!-- class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"> -->
	<!-- <property name="supportedMediaTypes"> -->
	<!-- <list> -->
	<!-- <value>text/html;charset=UTF-8</value> -->
	<!-- </list> -->
	<!-- </property> -->
	<!-- </bean> -->
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<!-- <bean -->
	<!-- class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> -->
	<!-- <property name="messageConverters"> -->
	<!-- <list> -->
	<!-- <ref bean="mappingJackson2HttpMessageConverter" /> JSON转换器 -->
	<!-- </list> -->
	<!-- </property> -->
	<!-- </bean> -->

	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
			<bean id="fastJsonHttpMessageConverter"
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
		<!-- 启用是为了推迟文件解析，以便捕获文件大小异常 -->
		<property name="resolveLazily" value="true" />
	</bean>

	<!-- 配置ViewResolver 。可用多个ViewResolver 。使用order属性排序。 InternalResourceViewResolver 
		放在最后 -->
	<!-- <bean -->
	<!-- class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver"> -->
	<!-- <property name="order" value="1"></property> -->
	<!-- <property name="mediaTypes"> -->
	<!-- <map> -->
	<!-- 告诉视图解析器，返回的类型为json格式 -->
	<!-- <entry key="json" value="application/json" /> -->
	<!-- <entry key="xml" value="application/xml" /> -->
	<!-- <entry key="htm" value="text/htm" /> -->
	<!-- </map> -->
	<!-- </property> -->
	<!-- <property name="defaultViews"> -->
	<!-- <list> -->
	<!-- ModelAndView里的数据变成JSON -->
	<!-- <bean -->
	<!-- class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" 
		/> -->
	<!-- </list> -->
	<!-- </property> -->
	<!-- <property name="ignoreAcceptHeader" value="true"></property> -->
	<!-- </bean> -->
	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="favorParameter" value="true" />
		<property name="parameterName" value="format" />
		<property name="ignoreAcceptHeader" value="false" />
		<property name="mediaTypes">
			<value>
				json=application/json
				xml=application/xml
				html=text/html
			</value>
		</property>
		<property name="defaultContentType" value="text/html" />
	</bean>
	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/" />
	<mvc:resources mapping="/webjars/**"
		location="classpath:/META-INF/resources/webjars/" />

</beans>